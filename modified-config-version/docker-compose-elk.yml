version: '2'
services:

  elasticsearch:
    image: elasticsearch
    networks:
      - my-network
    hostname: elasticsearch
    container_name: elasticsearch
    restart: always
    volumes:
      - /opt/elasticsearch/data:/usr/share/elasticsearch/data
    ports:
     - 9200:9200

  kibana:
    image: kibana
    networks:
      - my-network
    hostname: kibana
    container_name: kibana
    restart: always
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200/
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

  logstash:
    image: logstash
    networks:
      - my-network
    hostname: logstash
    container_name: logstash
    restart: always
    volumes:
      - /opt/logstash/conf:/opt/logstash/conf
    command: logstash -f /opt/logstash/conf/
    ports:
      - 5000:5000
      - 5044:5044
    depends_on:
      - elasticsearch

  ts-ui-dashboard:
    build: ts-ui-dashboard
    image: ts/ts-ui-dashboard
    restart: always
    ports:
      - 80:8080
    networks:
      - my-network

  ts-login-service:
    build: ts-login-service
    image: ts/ts-login-service
    restart: always
    ports:
      - 12342:12342
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-account-mongo:
    image: mongo
    networks:
      - my-network

  ts-route-service:
    build: ts-route-service
    image: ts/ts-route-service
    restart: always
    ports:
      - 11178:11178
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-route-mongo:
    image: mongo
    networks:
        - my-network

  ts-sso-service:
    build: ts-sso-service
    image: ts/ts-sso-service
    restart: always
    ports:
      - 12349:12349
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-verification-code-service:
    build: ts-verification-code-service
    image: ts/ts-verification-code-service
    restart: always
    ports:
      - 15678:15678
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-verification-code-mongo:
    image: mongo
    networks:
        - my-network

  ts-order-service:
    build: ts-order-service
    image: ts/ts-order-service
    restart: always
    ports:
      - 12031:12031
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-order-mongo:
    image: mongo
    networks:
      - my-network

  ts-station-service:
    build: ts-station-service
    image: ts/ts-station-service
    restart: always
    ports:
      - 12345:12345
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-station-mongo:
    image: mongo
    networks:
      - my-network

  ts-travel-service:
    build: ts-travel-service
    image: ts/ts-travel-service
    restart: always
    ports:
      - 12346:12346
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-travel-mongo:
    image: mongo
    networks:
      - my-network

  ts-basic-service:
    build: ts-basic-service
    image: ts/ts-basic-service
    restart: always
    ports:
      - 15680:15680
    networks:
        - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-ticketinfo-service:
    build: ts-ticketinfo-service
    image: ts/ts-ticketinfo-service
    restart: always
    ports:
      - 15681:15681
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-seat-service:
    build: ts-seat-service
    image: ts/ts-seat-service
    restart: always
    ports:
      - 18898:18898
    networks:
      - my-network
    depends_on:
      - logstash
    logging:
      driver: syslog
      options:
        syslog-address: 'tcp://127.0.0.1:5000'

  ts-train-service:
      build: ts-train-service
      image: ts/ts-train-service
      restart: always
      ports:
        - 14567:14567
      networks:
        - my-network
      depends_on:
        - logstash
      logging:
        driver: syslog
        options:
          syslog-address: 'tcp://127.0.0.1:5000'

  ts-train-mongo:
    image: mongo
    networks:
      - my-network

  ts-price-service:
      build: ts-price-service
      image: ts/ts-price-service
      restart: always
      ports:
        - 16579:16579
      networks:
        - my-network
      depends_on:
        - logstash
      logging:
        driver: syslog
        options:
          syslog-address: 'tcp://127.0.0.1:5000'

  ts-price-mongo:
    image: mongo
    networks:
      - my-network


#  ts-admin-basic-info-service:
#    build: ts-admin-basic-info-service
#    image: ts/ts-admin-basic-info-service
#    restart: always
#    ports:
#      - 18767:18767
#    networks:
#      - my-network
#    depends_on:
#      - logstash
#    logging:
#      driver: syslog
#      options:
#        syslog-address: 'tcp://127.0.0.1:5000'
#
#  ts-admin-order-service:
#    build: ts-admin-order-service
#    image: ts/ts-admin-order-service
#    restart: always
#    ports:
#      - 16112:16112
#    networks:
#      - my-network
#    depends_on:
#      - logstash
#    logging:
#      driver: syslog
#      options:
#        syslog-address: 'tcp://127.0.0.1:5000'
#
#  ts-admin-route-service:
#    build: ts-admin-route-service
#    image: ts/ts-admin-route-service
#    restart: always
#    ports:
#      - 16113:16113
#    networks:
#      - my-network
#    depends_on:
#      - logstash
#    logging:
#      driver: syslog
#      options:
#        syslog-address: 'tcp://127.0.0.1:5000'
#
#  ts-admin-travel-service:
#    build: ts-admin-travel-service
#    image: ts/ts-admin-travel-service
#    restart: always
#    ports:
#      - 16114:16114
#    networks:
#      - my-network
#    depends_on:
#      - logstash
#    logging:
#      driver: syslog
#      options:
#        syslog-address: 'tcp://127.0.0.1:5000'
#
#  ts-admin-user-service:
#    build: ts-admin-user-service
#    image: ts/ts-admin-user-service
#    restart: always
#    ports:
#      - 16115:16115
#    networks:
#      - my-network
#    depends_on:
#      - logstash
#    logging:
#      driver: syslog
#      options:
#        syslog-address: 'tcp://127.0.0.1:5000'

networks:
    my-network:
      # driver: overlay
      driver: bridge





